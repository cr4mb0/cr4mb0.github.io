<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="163.12762mm"
   height="24.201536mm"
   viewBox="0 0 163.12762 24.201536"
   version="1.1"
   id="svg5"
   inkscape:export-filename="Stage8.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   inkscape:version="1.2.1 (9c6d41e410, 2022-07-14)"
   sodipodi:docname="Stage8.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="1.6819304"
     inkscape:cx="213.14794"
     inkscape:cy="128.42386"
     inkscape:window-width="1920"
     inkscape:window-height="1009"
     inkscape:window-x="1912"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" />
  <defs
     id="defs2" />
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-18.424789,-4.5403495)">
    <text
       xml:space="preserve"
       style="font-size:10.3874px;font-family:'Roman SD';-inkscape-font-specification:'Roman SD, Normal';text-align:center;text-anchor:middle;fill:#000000;stroke-width:0.2"
       x="106.21679"
       y="17.98377"
       id="text236"
       transform="scale(0.94598903,1.0570947)"><tspan
         sodipodi:role="line"
         id="tspan234"
         style="stroke-width:0.2"
         x="106.21679"
         y="17.98377">Capsaicinum est via vitae</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:2.035px;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;text-anchor:middle;fill:#ececec;stroke-width:0.2"
       x="62.210495"
       y="-27.288895"
       id="text398"
       transform="scale(1,-1)"><tspan
         sodipodi:role="line"
         id="tspan396"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:2.035px;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#ececec;stroke-width:0.2"
         x="62.210495"
         y="-27.288895">. .- . -.- .. -.- .-- ..- / .--. --- -..- -..- .- --- ...- --.. / --- .- / -... .- . / --. -.-. .-. -.. -.. .. ...- -.-. / --.. .-. ..- -... .. .---</tspan></text>
  </g>
</svg>
